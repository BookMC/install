plugins {
    id "java"
    id "maven-publish"
}

ext {
    def env = System.getenv()
    local = !env.GITHUB_ACTIONS
    jdk = JavaVersion.current().getMajorVersion()
    branch = "git rev-parse --abbrev-ref HEAD".execute().text
}

group "org.bookmc"
version "0.1.0${local ? "-local" : ""}${JavaVersion.current() != JavaVersion.VERSION_1_8 ? "+jdk.$jdk" : ""}"

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.code.gson:gson:2.8.7"

    implementation group: "org.apache.logging.log4j", name: "log4j-api", version: "2.14.1"
    implementation group: "org.apache.logging.log4j", name: "log4j-core", version: "2.14.1"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"

    implementation group: "commons-io", name: "commons-io", version: "2.11.0"
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            def env = System.getenv()

            boolean isEnvVarsAvailable = env.containsKey("MAVEN_USER") && env.containsKey("MAVEN_PASSWORD")

            if (isEnvVarsAvailable) {
                credentials {
                    username env.get("MAVEN_USER")
                    password env.get("MAVEN_PASSWORD")
                }
            }

            url = local || !isEnvVarsAvailable ? "$buildDir/repository" : "https://maven.bookmc.org/releases/"
        }
    }

    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "book-loader"
                url = "https://github.com/BookMC/loader"

                developers {
                    developer {
                        name = "ChachyDev"
                    }
                }
            }
        }
    }
}